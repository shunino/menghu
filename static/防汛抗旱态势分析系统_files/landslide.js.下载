// 滑坡
var mychartMiniLand1, mychartMiniLand2, mychartLand1, mychartLand2;

// 滑坡双击
var doubleClickHpzhyhd = function (type) {
  $('#monitor-detail-content li').hide();
  $("#monitor-detail-right").hide();
  $('#monitor-detail').css("display", "none");
  var myWindow1, myWindow2
  if (type.motype == "hpzhyhd") {
    myWindow1 = new MyWindow($('#monitor-hpzh-basic'), {
      title: '隐患点-基本情况'
    });
    myWindow2 = new MyWindow($('#monitor-hpzh-chart'), {
      title: '隐患点-滑坡灾害防治预测'
    });
    myWindow1.dom.css("z-index", "-999");
    myWindow2.dom.css("z-index", "-999");
    myWindow1.show();
    myWindow2.show();
    var method = 'getDangerPointByID';
    var name = "隐患点";
    let id = type.id;
    let body = {
      interface: "com.ec.ws.service.def.xyyj.LandslideService",
      method: method,
      args: [id]
    };
    ajaxCallJson(body, "/rpc", ({
      data
    }) => {
      if (data) {
        var htmlObj = getHpzhyhdBasicHtml(data);
        var htmlObjMini = getHpzhyhdBasicHtmlMini(data);
        $("#hpzh-basic-left").empty();
        $("#hpzh-basic-left").append(htmlObj.htmlLeft);
        $("#hpzh-basic-right").empty();
        $("#hpzh-basic-right").append(htmlObj.htmlRight);
        $("#hpzh-basic-mini").empty();
        $("#hpzh-basic-mini").append(htmlObjMini);
        $("#hpzh-box-basic-title-name").empty();
        $("#hpzh-box-basic-title-name").append(data.pointLocation);
        $("#hpzh-box-chart-title-name").empty();
        $("#hpzh-box-chart-title-name").append(data.pointLocation);
        var title1 = data.pointLocation + "隐患点-基本情况";
        var title2 = data.pointLocation + "隐患点-滑坡灾害防治预测";
        myWindow1.setTitle(title1)
        myWindow2.setTitle(title2)
      }
    });
    getLandChartData(type, "miniLand");
  } else if (type.motype == "hpzhd") {
    myWindow1 = new MyWindow($('#monitor-hpzh-basic'), {
      title: '灾害点-基本情况'
    });
    myWindow2 = new MyWindow($('#monitor-hpzh-chart'), {
      title: '灾害点-滑坡灾害防治预测'
    });
    myWindow1.dom.css("z-index", "-999");
    myWindow2.dom.css("z-index", "-999");
    myWindow1.show();
    myWindow2.show();
    var method = 'getHazardPointByID';
    var name = "灾害点";
    let id = type.id;
    let body = {
      interface: "com.ec.ws.service.def.xyyj.LandslideService",
      method: method,
      args: [id]
    };
    ajaxCallJson(body, "/rpc", ({
      data
    }) => {
      if (data) {
        var htmlObj = getHpzhdBasicHtml(data);
        var htmlObjMini = getHpzhdBasicHtmlMini(data);
        $("#hpzh-basic-left").empty();
        $("#hpzh-basic-left").append(htmlObj.htmlLeft);
        $("#hpzh-basic-right").empty();
        $("#hpzh-basic-right").append(htmlObj.htmlRight);
        $("#hpzh-basic-mini").empty();
        $("#hpzh-basic-mini").append(htmlObjMini);
        $("#hpzh-box-basic-title-name").empty();
        $("#hpzh-box-basic-title-name").append(data.pointLocation);
        $("#hpzh-box-chart-title-name").empty();
        $("#hpzh-box-chart-title-name").append(data.pointLocation);
        var title1 = data.pointLocation + "灾害点-基本情况";
        var title2 = data.pointLocation + "灾害点-滑坡灾害防治预测";
        myWindow1.setTitle(title1);
        myWindow2.setTitle(title2);
      }
    });
    getLandChartData(type, "miniLand");
  }

  $("#monitor-detail-right-hpzh").show();

  myWindow1.resizecbfn(function () {
    resizeLandChart();
  });
  myWindow2.resizecbfn(function () {
    resizeLandChart();
  });

  //监听滑坡基本情况放大
  $('#hpzh-basic-max').unbind('click').bind('click', function () {
    myWindow1.dom.css("z-index", "1000");
    myWindow1.dom.css("display", "block");
    getLandChartData(type, "maxLand");

  });
  //监听滑坡灾害防治预测放大
  $('#hpzh-chart-max').unbind('click').bind('click', function () {
    myWindow2.dom.css("z-index", "1000");
    myWindow2.dom.css("display", "block");
    getLandChartData(type, "maxLand");
  });
  //监听关闭按钮
  $("#hpzh-basic-close").unbind('click').bind('click', function () {
    $("#monitor-detail-right-hpzh").hide();
  })
}

function resizeLandChart() {
  // var mychartMiniLand1, mychartMiniLand2, mychartLand1, mychartLand2;

  if (mychartMiniLand1 != null) {
    mychartMiniLand1.resize();
  }
  if (mychartMiniLand2 != null) {
    mychartMiniLand2.resize();
  }
  if (mychartLand1 != null) {
    mychartLand1.resize();
  }
  if (mychartLand2 != null) {
    mychartLand2.resize();
  }
}

//获取滑坡图表数据
var getLandChartData = function (type, chartType) {
  var parm = {
    type: type,
    id: type.id,
  };
  ajaxCallJson(parm, '/landSlidRouter', function (result) { //获取滑坡图表
    landslideChart(result, chartType);
    // landSlideDetailChart(result, chartType)
  })
}


var getHpzhdBasicHtmlMini = function (obj) {
  var html = '<tr><td>地级行政区:</td><td>' + (obj.region || "-") + '</td></tr>' +
    '<tr><td>乡镇级行政区:</td><td>' + (obj.townships || "-") + '</td></tr>' +
    '<tr><td>村民组:</td><td>' + (obj.team || "-") + '</td></tr>' +
    '<tr><td>经度:</td><td>' + (obj.lgtd || "-") + '</td></tr>' +
    '<tr><td>发现时间:</td><td>' + (obj.foundTime || "-") + '</td></tr>' +
    '<tr><td>灾害点级别:</td><td>' + (obj.pointLevel || "-") + '</td></tr>' +
    '<tr><td>诱发原因:</td><td>' + (obj.reason || "-") + '</td></tr>' +
    '<tr><td>受灾人数:</td><td>' + (obj.minatoryPerson || "-") + '</td></tr>' +
    '<tr><td>失踪人数:</td><td>' + (obj.dispearPerson || "-") + '</td></tr>' +
    '<tr><td>经济损失:</td><td>' + (obj.directLoss || "-") + '</td></tr>' +
    '<tr><td>立项标识:</td><td>' + (obj.successFlag || "-") + '</td></tr>' +
    '<tr><td>备注:</td><td>' + (obj.remark || "-") + '</td></tr>' +
    '<tr><td>县级行政区:</td><td>' + (obj.county || "-") + '</td></tr>' +
    '<tr><td>村级行政区:</td><td>' + (obj.village || "-") + '</td></tr>' +
    '<tr><td>具体位置:</td><td>' + (obj.pointLocation || "-") + '</td></tr>' +
    '<tr><td>纬度:</td><td>' + (obj.lttd || "-") + '</td></tr>' +
    '<tr><td>灾害点类型:</td><td>' + (obj.pointType || "-") + '</td></tr>' +
    '<tr><td>灾害点规模:</td><td>' + (obj.scale || "-") + '</td></tr>' +
    '<tr><td>直接原因:</td><td>' + (obj.reasonDetail || "-") + '</td></tr>' +
    '<tr><td>死亡人数:</td><td>' + (obj.deadPerson || "-") + '</td></tr>' +
    '<tr><td>受伤人数:</td><td>' + (obj.injuredPerson || "-") + '</td></tr>' +
    '<tr><td>遇难人数:</td><td>' + (obj.victims || "-") + '</td></tr>' +
    '<tr><td>登记时间:</td><td>' + (obj.registryTime || "-") + '</td></tr>';
  return html;
}
//滑坡灾害点基本信息
var getHpzhdBasicHtml = function (obj) {
  var htmlLeft = '<tr><td>地级行政区:</td><td>' + (obj.region || "-") + '</td></tr>' +
    '<tr><td>乡镇级行政区:</td><td>' + (obj.townships || "-") + '</td></tr>' +
    '<tr><td>村民组:</td><td>' + (obj.team || "-") + '</td></tr>' +
    '<tr><td>经度:</td><td>' + (obj.lgtd || "-") + '</td></tr>' +
    '<tr><td>发现时间:</td><td>' + (obj.foundTime || "-") + '</td></tr>' +
    '<tr><td>灾害点级别:</td><td>' + (obj.pointLevel || "-") + '</td></tr>' +
    '<tr><td>诱发原因:</td><td>' + (obj.reason || "-") + '</td></tr>' +
    '<tr><td>受灾人数:</td><td>' + (obj.minatoryPerson || "-") + '</td></tr>' +
    '<tr><td>失踪人数:</td><td>' + (obj.dispearPerson || "-") + '</td></tr>' +
    '<tr><td>经济损失:</td><td>' + (obj.directLoss || "-") + '</td></tr>' +
    '<tr><td>立项标识:</td><td>' + (obj.successFlag || "-") + '</td></tr>' +
    '<tr><td>备注:</td><td>' + (obj.remark || "-") + '</td></tr>';
  var htmlRight = '<tr><td>县级行政区:</td><td>' + (obj.county || "-") + '</td></tr>' +
    '<tr><td>村级行政区:</td><td>' + (obj.village || "-") + '</td></tr>' +
    '<tr><td>具体位置:</td><td>' + (obj.pointLocation || "-") + '</td></tr>' +
    '<tr><td>纬度:</td><td>' + (obj.lttd || "-") + '</td></tr>' +
    '<tr><td>灾害点类型:</td><td>' + (obj.pointType || "-") + '</td></tr>' +
    '<tr><td>灾害点规模:</td><td>' + (obj.scale || "-") + '</td></tr>' +
    '<tr><td>直接原因:</td><td>' + (obj.reasonDetail || "-") + '</td></tr>' +
    '<tr><td>死亡人数:</td><td>' + (obj.deadPerson || "-") + '</td></tr>' +
    '<tr><td>受伤人数:</td><td>' + (obj.injuredPerson || "-") + '</td></tr>' +
    '<tr><td>遇难人数:</td><td>' + (obj.victims || "-") + '</td></tr>' +
    '<tr><td>登记时间:</td><td>' + (obj.registryTime || "-") + '</td></tr>';
  var obj = {
    htmlLeft: htmlLeft,
    htmlRight: htmlRight
  }
  return obj;
}


var getHpzhyhdBasicHtmlMini = function (obj) {
  var html = '<tr><td>地级行政区:</td><td>' + (obj.region || "-") + '</td></tr>' +
    '<tr><td>乡镇级行政区:</td><td>' + (obj.townships || "-") + '</td></tr>' +
    '<tr><td>村民组:</td><td>' + (obj.team || "-") + '</td></tr>' +
    '<tr><td>经度:</td><td>' + (obj.lgtd || "-") + '</td></tr>' +
    '<tr><td>发现时间:</td><td>' + (obj.foundTime || "-") + '</td></tr>' +
    '<tr><td>隐患点级别:</td><td>' + (obj.pointLevel || "-") + '</td></tr>' +
    '<tr><td>诱发原因:</td><td>' + (obj.reason || "-") + '</td></tr>' +
    '<tr><td>影响人口:</td><td>' + (obj.minatoryPerson || "-") + '</td></tr>' +
    '<tr><td>影响资产:</td><td>' + (obj.minatoryAssets || "-") + '</td></tr>' +
    '<tr><td>防灾责任人:</td><td>' + (obj.personInCharge || "-") + '</td></tr>' +
    '<tr><td>监测责任人:</td><td>' + (obj.personInCharge1 || "-") + '</td></tr>' +
    '<tr><td>监测方式:</td><td>' + (obj.monitorMethod || "-") + '</td></tr>' +
    '<tr><td>避难安置点:</td><td>' + (obj.refugeSite || "-") + '</td></tr>' +
    '<tr><td>村级责任人电话:</td><td>' + (obj.mobileVillage || "-") + '</td></tr>' +
    '<tr><td>乡级责任人电话:</td><td>' + (obj.personInCountry || "-") + '</td></tr>' +
    '<tr><td>登记时间:</td><td>' + (obj.registryTime || "-") + '</td></tr>' +
    '<tr><td>县级行政区:</td><td>' + (obj.county || "-") + '</td></tr>' +
    '<tr><td>村级行政区:</td><td>' + (obj.village || "-") + '</td></tr>' +
    '<tr><td>具体位置:</td><td>' + (obj.pointLocation || "-") + '</td></tr>' +
    '<tr><td>纬度:</td><td>' + (obj.lttd || "-") + '</td></tr>' +
    '<tr><td>隐患点类型:</td><td>' + (obj.pointType || "-") + '</td></tr>' +
    '<tr><td>隐患点规模:</td><td>' + (obj.scale || "-") + '</td></tr>' +
    '<tr><td>影响家庭:</td><td>' + (obj.minatoryHouse || "-") + '</td></tr>' +
    '<tr><td>影响房屋:</td><td>' + "-" + '</td></tr>' +
    '<tr><td>稳定状况:</td><td>' + (obj.status || "-") + '</td></tr>' +
    '<tr><td>防灾责任人电话:</td><td>' + (obj.mobile || "-") + '</td></tr>' +
    '<tr><td>监测责任人电话:</td><td>' + (obj.mobile1 || "-") + '</td></tr>' +
    '<tr><td>防治措施:</td><td>' + (obj.measures || "-") + '</td></tr>' +
    '<tr><td>村级责任人:</td><td>' + (obj.personInVillage || "-") + '</td></tr>' +
    '<tr><td>乡级责任人:</td><td>' + (obj.personInCountry || "-") + '</td></tr>' +
    '<tr><td>立项标识:</td><td>' + (obj.successFlag || "-") + '</td></tr>' +
    '<tr><td>备注:</td><td>' + (obj.remark || "-") + '</td></tr>';
  return html;
}
//滑坡灾害隐患点基本信息
var getHpzhyhdBasicHtml = function (obj) {

  var htmlLeft = '<tr><td>地级行政区:</td><td>' + (obj.region || "-") + '</td></tr>' +
    '<tr><td>乡镇级行政区:</td><td>' + (obj.townships || "-") + '</td></tr>' +
    '<tr><td>村民组:</td><td>' + (obj.team || "-") + '</td></tr>' +
    '<tr><td>经度:</td><td>' + (obj.lgtd || "-") + '</td></tr>' +
    '<tr><td>发现时间:</td><td>' + (obj.foundTime || "-") + '</td></tr>' +
    '<tr><td>隐患点级别:</td><td>' + (obj.pointLevel || "-") + '</td></tr>' +
    '<tr><td>诱发原因:</td><td>' + (obj.reason || "-") + '</td></tr>' +
    '<tr><td>影响人口:</td><td>' + (obj.minatoryPerson || "-") + '</td></tr>' +
    '<tr><td>影响资产:</td><td>' + (obj.minatoryAssets || "-") + '</td></tr>' +
    '<tr><td>防灾责任人:</td><td>' + (obj.personInCharge || "-") + '</td></tr>' +
    '<tr><td>监测责任人:</td><td>' + (obj.personInCharge1 || "-") + '</td></tr>' +
    '<tr><td>监测方式:</td><td>' + (obj.monitorMethod || "-") + '</td></tr>' +
    '<tr><td>避难安置点:</td><td>' + (obj.refugeSite || "-") + '</td></tr>' +
    '<tr><td>村级责任人电话:</td><td>' + (obj.mobileVillage || "-") + '</td></tr>' +
    '<tr><td>乡级责任人电话:</td><td>' + (obj.personInCountry || "-") + '</td></tr>' +
    '<tr><td>登记时间:</td><td>' + (obj.registryTime || "-") + '</td></tr>';

  var htmlRight = '<tr><td>县级行政区:</td><td>' + (obj.county || "-") + '</td></tr>' +
    '<tr><td>村级行政区:</td><td>' + (obj.village || "-") + '</td></tr>' +
    '<tr><td>具体位置:</td><td>' + (obj.pointLocation || "-") + '</td></tr>' +
    '<tr><td>纬度:</td><td>' + (obj.lttd || "-") + '</td></tr>' +
    '<tr><td>隐患点类型:</td><td>' + (obj.pointType || "-") + '</td></tr>' +
    '<tr><td>隐患点规模:</td><td>' + (obj.scale || "-") + '</td></tr>' +
    '<tr><td>影响家庭:</td><td>' + (obj.minatoryHouse || "-") + '</td></tr>' +
    '<tr><td>影响房屋:</td><td>' + "-" + '</td></tr>' +
    '<tr><td>稳定状况:</td><td>' + (obj.status || "-") + '</td></tr>' +
    '<tr><td>防灾责任人电话:</td><td>' + (obj.mobile || "-") + '</td></tr>' +
    '<tr><td>监测责任人电话:</td><td>' + (obj.mobile1 || "-") + '</td></tr>' +
    '<tr><td>防治措施:</td><td>' + (obj.measures || "-") + '</td></tr>' +
    '<tr><td>村级责任人:</td><td>' + (obj.personInVillage || "-") + '</td></tr>' +
    '<tr><td>乡级责任人:</td><td>' + (obj.personInCountry || "-") + '</td></tr>' +
    '<tr><td>立项标识:</td><td>' + (obj.successFlag || "-") + '</td></tr>' +
    '<tr><td>备注:</td><td>' + (obj.remark || "-") + '</td></tr>';
  var obj = {
    htmlLeft: htmlLeft,
    htmlRight: htmlRight
  }
  return obj;
}



var landslideChart = function (res, type) {
  try {
    var rain4 = res.rain; //预报降水
    // var inflow4 = res.inflow4;//预报入流
    var inflow4 = res.k; //滑坡稳定系数
    // var flowMax = Math.max.apply(null, res.inflow4) * 0.9;
    var flowMax = Math.max.apply(null, res.k);
    var rainMax = Math.ceil(Math.max.apply(null, res.rain)) * 0.7;
    var rain4Max = -Math.ceil(Math.max.apply(null, res.rain) * 2);
    // var inflowMax = Math.ceil(Math.max.apply(null, res.inflow4) * 1.2);
    var inflowMax = Math.ceil(Math.max.apply(null, res.k));
    var min, max;
    var maxRain = Math.max.apply(null, res.rain);
    if (maxRain < 1.5) {
      min = -2;
    } else {
      min = -Math.ceil((Math.max.apply(null, res.rain) * 2));
    }
    var ftime = res.ftime;
    var time4 = res.time;
    var stMax, stagMax, stagMin;
    var stage4;
    var seriesOption1 = [];
    var seriesOption2 = [];
    var legendData = [];
    var color = [];
    var yAxis1 = [];
    var yAxis2 = [];

    if (typeof (res.k) != 'undefined' && res.k != null) {
      legendData.push("坡面稳定系数(k)");
      color.push('#ff3366');
      yAxis1.push({
        // name: '流量(m³/s)',
        name: "坡面稳定系数(k)",
        nameLocation: 'middle',
        nameGap: '30',
        nameTextStyle: {
          color: '#fff'
        },
        max: inflowMax,
        type: 'value',
        position: 'left',
        axisLabel: {
          textStyle: {
            color: '#fff'
          }
        },
        splitArea: {
          show: true,
          areaStyle: {
            color: ['rgba(0,153,255,0.3)', 'rgba(89,125,140,0.3)']
          }
        },
        splitLine: {
          show: false
        },
        axisTick: {
          lineStyle: {
            color: '#fff'
          }
        }
      });
      seriesOption1.push({
        name: "坡面稳定系数(k)",
        type: 'line',
        data: inflow4,
        yAxisIndex: 0, //对应哪根Y轴
        showSymbol: false,
        smooth: true,
        markPoint: {
          label: {
            normal: {
              formatter: function (p) {
                var value = p.value;
                return value.toFixed(3);
              }
            }
          },
          data: [{
              type: 'max',
              symbol: 'circle',
              symbolSize: 5,
              //coord: ["04-17 05:00", '-3.59'],
              label: {
                normal: {
                  show: true,
                  textStyle: {
                    color: '#fff'
                  }
                }
              },
              itemStyle: {
                normal: {
                  label: {
                    show: true,
                    position: 'top'
                  }

                }
              }

            },
            {
              type: 'min',
              symbol: 'circle',
              symbolSize: 5,
              //coord: ["04-17 05:00", '-3.59'],
              label: {
                normal: {
                  show: true,
                  textStyle: {
                    color: '#fff'
                  }
                }
              },
              itemStyle: {
                normal: {
                  label: {
                    show: true,
                    position: 'bottom'
                  }

                }
              }

            }
          ]
        },
        markLine: {
          silent: true,
          data: [{
            yAxis: 1,
            lineStyle: {
              normal: {
                type: 'solid',
                width: "1",
                color: '#e0db1e'
              }
            }
          }, {
            yAxis: 100
          }]
        },
      });
    }
    if (typeof (res.rain) != 'undefined' && res.rain != null) {
      legendData.push('降水(mm)');
      color.push('#3399ff');
      yAxis2.push({
        name: '降水(mm)',
        nameLocation: 'middle',
        nameGap: '30',
        nameTextStyle: {
          color: '#fff'
        },
        min: min,
        type: 'value',
        axisLabel: {
          formatter: function (v) {
            //console.log(v)
            return -v;
          },
          textStyle: {
            color: '#fff'
          }
        },
        splitLine: {
          show: false
        },
        splitArea: {
          show: true,
          areaStyle: {
            color: ['rgba(0,153,255,0.3)', 'rgba(89,125,140,0.3)']
          }
        },
        axisTick: {
          lineStyle: {
            color: '#fff'
          }
        }
      }, {
        // name: '流量(m³/s)',
        name: "土壤含水量(mm)",
        nameLocation: 'middle',
        nameGap: '20',
        nameTextStyle: {
          color: '#fff'
        },
        // max: inflowMax,
        type: 'value',
        position: 'right',
        axisLabel: {
          textStyle: {
            color: '#fff'
          }
        },
        splitArea: {
          show: false,
          areaStyle: {
            color: ['rgba(0,153,255,0.3)', 'rgba(89,125,140,0.3)']
          }
        },
        splitLine: {
          show: false
        },
        axisTick: {
          lineStyle: {
            color: '#fff'
          }
        }
      });
      seriesOption1.push({
        name: "降水(mm)",
        type: 'bar',
        barWidth: 5,
        // stack: '流量',
        data: inflow4.map(function (i) {
          var tag = '';
          i = tag;
          return i;
        })
      });
      seriesOption2.push({
        name: '降水(mm)',
        type: 'bar',
        barWidth: 5,
        data: rain4.map(function (item) {
          return -item;
        }),
        markPoint: {
          label: {
            normal: {
              formatter: function (p) {
                var value = p.value;
                return -value.toFixed(3);
              }
            }
          },
          data: [{
            type: 'min',
            symbol: 'circle',
            symbolSize: 5,
            //coord: ["04-17 05:00", '-3.59'],
            label: {
              normal: {
                show: true,
                textStyle: {
                  color: '#fff'
                }
              }
            },
            itemStyle: {
              normal: {
                label: {
                  show: true,
                  position: 'bottom'
                }
              }
            }
          }]
        },
        markLine: {
          symbol: "none",
          label: {
            normal: {
              show: true,
              position: "end"
              //formatter: "这里写标注等"//标注名称，对分割线的说明
            }
          },
          lineStyle: {
            normal: {
              type: 'dashed',
              width: "2",
              color: '#e0db1e'
            }
          },
          data: [
            [{
              coord: [ftime, "0"], //第二个参数表示起始点
              label: {
                normal: {
                  show: true,
                  position: "end", //标注的位置(start)表示起始位置，(end)表示结束位置,
                  formatter: ftime
                }
              }
            }, {
              coord: [ftime, -rainMax]
            }] //第二个参数表示终点,是y轴的最大值
          ]
        }
      })
    }
    if (typeof (res.w0) != 'undefined' && res.w0 != null) {
      stage4 = res.w0; //土壤含水量
      stMax = pMax(stage4);
      stagMax = stMax * 1.00999;
      stagMin = stMax * 0.99888;
      legendData.push("土壤含水量(w0)");
      color.push('#4ff7b1');
      seriesOption1.push({
        name: "土壤含水量(w0)",
        type: 'line',
        barWidth: 5,
        data: stage4.map(function (item) {
          var tag = '';
          item = tag;
          return item;
        })
      });
      seriesOption2.push({
        name: "土壤含水量(w0)",
        type: 'line',
        yAxisIndex: 1, //对应哪根Y轴
        showSymbol: false,
        markPoint: {
          label: {
            normal: {
              formatter: function (p) {
                var value = p.value;
                return value.toFixed(3);
              }
            }
          },
          data: [{
              type: 'max',
              symbol: 'circle',
              symbolSize: 5,
              //coord: ["04-17 05:00", '-3.59'],
              label: {
                normal: {
                  show: true,
                  textStyle: {
                    color: '#fff'
                  }
                }
              },
              itemStyle: {
                normal: {
                  label: {
                    show: true,
                    position: 'top'
                  }
                }
              }
            },
            {
              type: 'min',
              symbol: 'circle',
              symbolSize: 5,
              //coord: ["04-17 05:00", '-3.59'],
              label: {
                normal: {
                  show: true,
                  textStyle: {
                    color: '#fff'
                  }
                }
              },
              itemStyle: {
                normal: {
                  label: {
                    show: true,
                    position: 'bottom'
                  }
                }
              }
            }
          ]
        },
        data: stage4,
        smooth: true
      });
    }
    var option = {
      title: {
        text: "",
        x: 'center',
        textStyle: {
          color: '#00adef'
        }
      },
      color: ['', '#3399ff', '#4ff7b1'],
      tooltip: {
        trigger: 'axis',
        formatter: function (params) {
          var m2;
          var seName2;
          var name2;
          if (params[0] != null && params[0] != undefined) {
            var mm2 = params[0].data;
            if (mm2 == '' || mm2 == '-' || typeof (mm2) == "undefined" || isNaN(mm2)) {
              m2 = '0';
              seName2 = params[0].seriesName + ' : ' + m2;
              name2 = params[0].name;
            } else {
              m2 = parseFloat(mm2).toFixed(3);
              seName2 = params[0].seriesName + ' : ' + m2;
              name2 = params[0].name;
            }
          } else {
            seName2 = '';
            name2 = '';
          }
          return name2 + '<br/>' + seName2;

        },
        axisPointer: {
          lineStyle: {
            color: '#f40c0c',
            opacity: 1,
            width: 1
          }
        }
      },
      legend: {
        // data: ['预报降水(mm)', '预报入流(m³/s)', '预报水位(m)'],
        data: legendData,
        x: 'center',
        padding: [0, 0, 5, 0],
        textStyle: {
          color: '#fff',
          fontSize: 10
        },
        itemHeight: '10'
      },
      toolbox: {
        show: true
      },
      dataZoom: [{
          type: 'slider',
          show: false,
          // height: 10,
          start: 0,
          end: 100,
          handleSize: 8,
          fillerColor: 'rgba(70,130,180,0.5)',
          backgroundColor: ['rgba(47,69,84,1)']
        },
        {
          type: 'inside',
          show: false,
          // height: 10,
          realtime: false,
          start: 0,
          end: 100,
          fillerColor: 'rgba(70,130,180,0.5)',
          backgroundColor: ['rgba(47,69,84,1)']
        }, {
          show: false,
          handleIcon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4v1.3h1.3v-1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7V23h6.6V24.4z M13.3,19.6H6.7v-1.4h6.6V19.6z',
          handleSize: '80%',
          show: false,
          realtime: false,
          handleStyle: {
            color: '#fff',
            shadowBlur: 3,
            shadowColor: 'rgba(0, 0, 0, 0.6)',
            shadowOffsetX: 2,
            shadowOffsetY: 2
          }
        }
      ],
      calculable: true,
      grid: {
        left: '9%',
        right: '8%',
        bottom: '5%',
        top: '20%'
      },
      xAxis: [{
        type: 'category',
        data: time4.map(function (item) {
          // return item.substring(5, 16);
          return item;
        }),
        //boundaryGap: true,//
        boundaryGap: ['20%', '20%'],
        axisTick: {
          show: false,
          interval: 'auto',
          //onGap: true
          lineStyle: {
            color: '#fff'
          }
        },
        splitLine: {
          show: false
        },
        splitArea: {
          show: false,
          areaStyle: {
            color: [
              'rgba(29, 49, 57, 0.3)', 'rgba(29, 49, 57, 0.3)' //设置图标区域背景颜色
            ]
          }
        },
        axisLabel: {
          interval: 'auto',
          show: false,
          textStyle: {
            color: '#fff'
          }
        }
      }],
      yAxis: yAxis1,
      visualMap: {
        top: 35,
        right: 0,
        show: false,
        pieces: [{
            gt: 0.1,
            lte: 0.4,
            label: '(系数k)0.1~0.4',
            color: '#ff3366'
          }, {
            gt: 0.4,
            lte: 0.6,
            label: '(系数k)0.4~0.6',
            color: '#f99f4e'
          },
          {
            gt: 0.6,
            lte: 0.8,
            label: '(系数k)0.4~0.8',
            color: '#fff586'
          },
          {
            gt: 0.8,
            lte: 1,
            label: '(系数k)0.8~1',
            color: '#7bcce4'
          }
        ],
        textStyle: {
          color: '#fff'
        },
        outOfRange: {
          color: '#999'
        }
      },
      series: seriesOption1
    };
    var option2 = {
      // color: ['#ff3366', '#4ff7b1'],
      color: ['#3399ff', '#4ff7b1'],
      legend: {
        show: false
        //data: ['降水(mm)', '流量(m³/s)', '实测流量(m³/s)'],
      },
      tooltip: {
        trigger: 'axis',
        formatter: function (params) {

          var m2, m3;
          var seName2, seName3;
          var name2;

          if (params[0] != null && params[0] != undefined) {
            var mm2 = params[0].data;
            if (mm2 == '' || mm2 == '-' || typeof (mm2) == "undefined" || isNaN(mm2)) {
              m2 = '0';
              seName2 = params[0].seriesName + ' : ' + m2;
              name2 = params[0].name;
            } else {
              m2 = -parseFloat(mm2).toFixed(3);
              seName2 = params[0].seriesName + ' : ' + m2;
              name2 = params[0].name;
            }
          } else {
            seName2 = '';
            name2 = '';
          }

          if (params[1] != null && params[1] != undefined) {
            var mm3 = params[1].data;
            if (mm3 == '' || mm3 == '-' || typeof (mm3) == "undefined" || isNaN(mm3)) {
              m3 = '0';
              seName3 = params[1].seriesName + ' : ' + m3;
            } else {
              m3 = parseFloat(mm3).toFixed(3);
              seName3 = params[1].seriesName + ' : ' + m3;
            }
          } else {
            seName3 = '';
          }
          return name2 + '<br/>' + seName2 + '<br/>' + seName3;
        },
        axisPointer: {
          lineStyle: {
            color: '#f40c0c',
            opacity: 1,
            width: 1
          }
        }
      },
      toolbox: {
        show: true
      },
      grid: {
        left: '9%',
        right: '8%',
        bottom: '22%',
        top: '10%'
      },
      dataZoom: [{
          type: 'slider',
          show: false,
          // height: 10,
          start: 0,
          end: 100,
          realtime: false,
          handleSize: 8,
          fillerColor: 'rgba(70,130,180,0.5)',
          backgroundColor: ['rgba(47,69,84,1)']
        },
        {
          type: 'inside',
          show: false,
          // height: 10,
          start: 0,
          end: 100,
          fillerColor: 'rgba(70,130,180,0.5)',
          backgroundColor: ['rgba(47,69,84,1)']
        }, {
          handleIcon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4v1.3h1.3v-1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7V23h6.6V24.4z M13.3,19.6H6.7v-1.4h6.6V19.6z',
          handleSize: '80%',
          // height: 10,
          show: false,
          textStyle: {
            color: '#fff'
          },
          realtime: false,
          handleStyle: {
            color: '#fff',
            shadowBlur: 3,
            shadowColor: 'rgba(0, 0, 0, 0.6)',
            shadowOffsetX: 2,
            shadowOffsetY: 2
          }
        }
      ],
      xAxis: [{
          show: false,
          type: 'category',
          data: time4.map(function (item) {
            // return item.substring(5, 16);
            return item;
          }),
          position: 'top',
          boundaryGap: true,
          axisTick: {
            show: true,
            interval: 'auto',
            //onGap: true
            lineStyle: {
              color: '#fff'
            }
          },
          splitLine: {
            show: false
          },
          axisLabel: { //横轴刻度
            show: true,
            interval: 'auto', //显示x轴的间隔数目23位一格
            textStyle: {
              color: '#fff',
              align: 'center'
            }
          }
        },
        {
          show: true,
          type: 'category',
          data: time4.map(function (item) {
            // return item.substring(5, 16);
            return item;
          }),
          position: 'bottom',
          boundaryGap: true,
          axisTick: {
            show: true,
            interval: 'auto',
            //onGap: true
            lineStyle: {
              color: '#fff'
            }
          },
          splitLine: {
            show: false
          },
          axisLabel: { //横轴刻度
            show: true,
            interval: 'auto', //显示x轴的间隔数目23位一格
            textStyle: {
              color: '#fff',
              align: 'center'
            }
          }
        }
      ],
      yAxis: yAxis2,
      series: seriesOption2
    };
  } catch (e) {
    console.log(e)
  }

  if (type == "miniLand") {
    disposeMiniLandCharts()
    // 基于准备好的dom，初始化echarts实例
    mychartMiniLand1 = echarts.init(document.getElementById('hpzh-mini-chart1'));
    mychartMiniLand2 = echarts.init(document.getElementById('hpzh-mini-chart2'));
    // option
    // 使用刚指定的配置项和数据显示图表。
    mychartMiniLand1.setOption(option);
    mychartMiniLand2.setOption(option2);
    echarts.connect([mychartMiniLand1, mychartMiniLand2]);
  } else {
    disposeLandCharts();
    // 基于准备好的dom，初始化echarts实例
    mychartLand1 = echarts.init(document.getElementById('hpzh-chart-chart1'));
    mychartLand2 = echarts.init(document.getElementById('hpzh-chart-chart2'));
    option2.dataZoom[0].show = true;
    option2.dataZoom[1].show = true;
    option2.dataZoom[2].show = true;
    option.dataZoom[0].start = 50;
    option.dataZoom[1].start = 50;
    option2.dataZoom[0].start = 50;
    option2.dataZoom[1].start = 50;
    // 使用刚指定的配置项和数据显示图表。
    mychartLand1.setOption(option);
    mychartLand2.setOption(option2);
    echarts.connect([mychartLand1, mychartLand2]);
  }


  // setTimeout(function () {
  //   window.onresize = function () {
  //     if(mychartMiniLand1){

  //     }
  //     myChart.resize();
  //     myChart2.resize();
  //   }
  // }, 200);
  // 使用刚指定的配置项和数据显示图表。
  // myChart.setOption(option);
};
//获取数组中最大值
var pMax = function (array) {
  var arr = [];
  for (var i = 0; i < array.length; i++) {
    if (array[i] == '-') {
      array[i] = '0';
    }
    arr.push(array[i]);
  }
  var max = Math.max.apply(Math, arr);
  return max;
}
var disposeMiniLandCharts = function () {
  if (mychartMiniLand1 != null) {
    mychartMiniLand1.dispose();
    mychartMiniLand1 = null;
  }
  if (mychartMiniLand2 != null) {
    mychartMiniLand2.dispose();
    mychartMiniLand2 = null;
  }
  mychartMiniLand1 = null;
  mychartMiniLand2 = null;
}

var disposeLandCharts = function () {
  if (mychartLand1 != null) {
    mychartLand1.dispose();
    mychartLand1 = null;
  }
  if (mychartLand2 != null) {
    mychartLand2.dispose();
    mychartLand2 = null;
  }
  mychartLand1 = null;
  mychartLand2 = null;
}

//最小值
function getTheMin(params) {
  if (typeof (params) != "undefined" && params != null && params.length > 0) {
      var min = parseInt(Math.min.apply(Math, params));
      if (min > 0) {//如果小于1
          return 0;
      } else {
          return ((parseInt(min / 5)) - 1) * 5;//返回5的倍数
      }
  }
}

//最大值
function getTheMax(params) {
  if (typeof (params) != "undefined" && params != null && params.length > 0) {
      var max = Math.max.apply(Math, params);
      if (max < 1) {//如果小于1
          return 1;
      } else {
          max = (Math.ceil(max / 4)) * 5;
          //max=(Math.ceil(max/5))*5;
          return max;//否则返回5的倍数
      }
  }
}