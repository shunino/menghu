/**
 * Created by Administrator on 2018/5/24.
 */
$(function () {

    //新增页面点击提交
    $('#early-warning-setting-add-submit').unbind("click").bind('click', function () {
        //hideUnitList();
        updateEarlyWarningData(1);
    });
    //编辑页面点击提交
    $('#early-warning-setting-edit-submit').unbind("click").bind('click', function () {
        //hideUnitList();
        updateEarlyWarningData(2);
    });
})
//水库日常报讯界面
var initDailyNewsDataWin = function (mocd,id,index) {
    ajaxCallJson({mocd: mocd}, '/base/getRsvrDailyReportofFlood', function (result) {
        if(index){
            layer.close(index);
        }
        var data = result.data.data;
        var columns = new Array();
        columns.push({field: "checkbox", title: "select", align: true, checkbox: true});
        columns.push({field: 'depart', title: '单位名称', align: "center"});
        columns.push({field: 'bcrnm', title: '姓名', align: "center"});
        columns.push({field: 'mobphone', title: '手机', align: "center"});
        columns.push({field: 'duties', title: '职务', align: "center"});
        data.messageTargets = {columns: columns, data: data.relationPersons};
        var html;
        var tableId = 'table_' + new Date().getTime();
        if (data.smsWaterStationContent && data.smsRainContent) {
            html = "<div class='content' style='margin-top: 5px;'><fieldset class='fieldset'><table class='table'>"
                + "<tr><td>近12小时:</td><td>" + data.rValue_12 + "</td><td>未来12小时:</td><td>" + data.fValue_12 + "</td><td>入库洪水:</td><td>" + data.inqFlood + "</td></tr>"
                + "<tr><td>近24小时:</td><td>" + data.rValue_24 + "</td><td>未来24小时:</td><td>" + data.fValue_24 + "</td><td>洪水频率:</td><td>" + data.floodTimes + "</td></tr>"
                + "<tr><td>未来两天:</td><td>" + data.fValue_48 + "</td><td>当前水位:</td><td>" + data.z + "</td><td>发布时间:</td><td>" + data.publishTime + "</td></tr>"
                + "</table>"
            html += "<fieldset class='fieldset'><span>水情短信内容:</span>";
            html += "<span class='nodeWaterContext'>" + formatSmsTemplate(data.smsWaterStationContent, data.smsWaterStationValue) + "</span>";
            html += "<button style='width:110px;height:26px;' onclick='previewSms(\".reservoir-daily-news .nodeWaterContext\")'>水情短信预览</button>";
            html += "<button onclick='' style='width:80px;height:26px;'>短信发送</button>";
            html += "</fieldset>";
            //雨晴短信模板
            html += "<fieldset class='fieldset' style='margin-top: 5px'><span>雨情短信内容:</span>";
            html += "<span class='nodeRainContext'>" + formatSmsTemplate(data.smsRainContent, data.smsRainValue) + "</span>";
            html += "<button style='width:110px;height:26px;' onclick='previewSms(\".reservoir-daily-news .nodeRainContext\")'>雨晴短信预览</button>";
            html += "<button onclick='' style='width:80px;height:26px;'>短信发送</button>";
            html += "</fieldset></fieldset></div>";
            html += '<div style="margin-top: 10px;margin-bottom: 10px" class="warning-item" id="' + tableId + '-container"><table id="' + tableId + '" class="table"></table></div>';
        } else {
            html= "<div class='content' style='margin-top: 5px;'><fieldset class='fieldset'><table class='table'>"
                + "<tr><td>近12小时:</td><td>" + data.rValue_12 + "</td><td>未来12小时:</td><td>" + data.fValue_12 + "</td><td>入库洪水:</td><td>" + data.inqFlood + "</td></tr>"
                + "<tr><td>近24小时:</td><td>" + data.rValue_24 + "</td><td>未来24小时:</td><td>" + data.fValue_24 + "</td><td>洪水频率:</td><td>" + data.floodTimes + "</td></tr>"
                + "<tr><td>未来两天:</td><td>" + data.fValue_48 + "</td><td>当前水位:</td><td>" + data.z + "</td><td>发布时间:</td><td>" + data.publishTime + "</td></tr>"
                + "</table>"
            html += "<fieldset class='fieldset'><span>短信内容:</span>";
            html += "<span class='nodeContext'>" + formatSmsTemplate(data.smsNormalContent, data.smsNormalValue) + "</span>";
            html += "<button style='width:80px;height:26px;' onclick='previewSms(\".reservoir-daily-news .nodeContext\")'>短信预览</button>";
            html += "<button onclick='' style='width:80px;height:26px;'>短信发送</button>";
            html += "</fieldset></fieldset></div>";
            html += '<div style="margin-top: 10px;margin-bottom: 10px" class="warning-item" id="' + tableId + '-container"><table id="' + tableId + '" class="table"></table></div>';
        }
        $('#'+id).html(html);
        createDailyNewsBootstrapTable(tableId, data.messageTargets);
        $('#' + tableId).bootstrapTable('checkAll');
    })
}
var createDailyNewsBootstrapTable = function (id, _table, window, _pagination, nodeflg, done) {
    var height = "";
    var data = _table.data;
    if (!data) {
        data = new Array();
    }
    for (var i = 0; i < data.length; i++) {
        data[i].id = i + 1;
    }
    var columns = _table.columns;
    var flag = true;
    if (!columns) {
        columns = new Array();
    }
    for (var i = 0; i < columns.length; i++) {
        if (columns[i].field == "id") {
            flag = false;
            break;
        }
    }
    if (flag) {
        var temp = {
            visible: false,
            field: 'id',
            title: '序号'
        }
        columns.push(temp);
    }
    ;
    var page = false;
    if (_pagination != undefined)
        page = _pagination;
    var option = {
        height: height,
        columns: columns,
        data: data,
        showHeader: true,
        pagination: page,
        uniqueId: "id",
        pageNumber: 1,
        pageSize: 10,
        pageList: [10]

    }
    $('#' + id).bootstrapTable('destroy');
    $('#' + id).bootstrapTable('load', _table.data);
    $('#' + id).bootstrapTable(option);
    $('#' + id).unbind("click-cell.bs.table").bind("click-cell.bs.table", function (filed, value, ele, data) {
        var filed = value;
        if (filed == "noteContent") {
            var allMsg = data.noteAllContent;
            layer.alert(allMsg, {
                title: "详细信息"
            });
        }
        if (done) {
            done(filed, data)
        }
    });
}
//水库三类责任人
var threeResponsiblePersons = function (mocd, clickTableHeight) {
    ajaxCallJson({mocd: mocd}, '/base/getRsvrPersonLiableData', function (result) {
        $('#three-responsible-persons-content').html('<table id="early-warning-setting-basic-table"  ></table>');
        showThreeResponsibleTable(result);
        if (result&&result.data&&result.data.data&&result.data.data.length>0) {
            currentOrgcd = result.data.data[0].orgcd
        }
    })
}
var showThreeResponsibleTable = function (result, clickTableHeight) {
    var columns = [
        {
            field: "checkbox",
            title: "select",
            align: true,
            checkbox: true
        },
        {
            field: 'id',
            title: '序号',
            align: "center"
        },
        {
            field: 'depart',
            title: '单位名称',
            align: "center",
        },
        {
            field: 'bcrnm',
            title: '姓名',
            align: "center"
        },
        {
            field: 'mobphone',
            title: '手机',
            align: "center"
        },
        {
            field: 'orgnm',
            title: '所属机构',
            align: "center",
            visible: false
        },
        //{
        //    field:'title',
        //    title:'职位',
        //    align:"center"
        //},
        {
            field: 'duties',
            title: '职务',
            align: "center"
        },
        {
            field: 'email',
            title: '邮箱',
            align: "center"
        },
        {
            field: 'landphone',
            title: '电话',
            align: "center"
        },
    ];
    for (var key in result.data.data) {
        result.data.data[key]['id'] = parseFloat(key) + 1;
    }
    var option = {
        height: clickTableHeight,
        columns: columns,
        data: result.data.data,
        pageNumber: 1,
        cache: false,
        pageSize: 20,
        pageList: [10, 20, 50, 100],//10,20,50,100
        clickToSelect: true,
    };
    //处理服务器返回的数据
    function responseHandler(res) {
        var index = (res.pageNumber - 1) * res.pageSize;
        for (var i = 0; i < res.rows.length; i++) {
            res.rows[i].id = i + 1 + index;
        }
        return res;
    }

    function queryParamsFunc(params) {
        params = $.extend({}, params, queryParams);
        return params;
    }

    $('#early-warning-setting-basic-table').bootstrapTable('destroy');
    $('#early-warning-setting-basic-table').bootstrapTable(option);
    //$("input[name='btSelectAll']").hide();
    $('#early-warning-setting-basic-table').unbind('check.bs.table').bind('check.bs.table', function (event, value, ele) {
        value.index = ele.data('index');
        mailSelectArray.push(value);
    });
    $('#early-warning-setting-basic-table').unbind('uncheck.bs.table').bind('uncheck.bs.table', function (rows, value) {
        mailSelectArray.removeByValue(value);
    });
    //win.resizecbfn(function () {
    //    var height=resizeThreeResponsibleHeight();
    //    $('#early-warning-setting-basic-table').bootstrapTable("resetView",{height:height});
    //})
}
//新增水库三类责任人
var earlyWarningSettingLayer, earlyWarningSelectArray = [];
var addEarlyWarningContent = function () {
    $('#early-warning-setting-add-submit').show();
    $('#early-warning-setting-edit-submit').hide();
    //初始化界面
    $('#early-warning-setting-name').val('');
    $('#early-warning-setting-mobelphone').val('');
    $('#early-warning-setting-phone').val('');
    $('#early-warning-setting-email').val('');
    $('#early-warning-setting-depart').val(currentName);
    $('#early-warning-setting-job').val('');
    $('.early-warning-setting-container').show();
    earlyWarningSettingLayer = initLayerWin("新增", ".early-warning-setting-content-input");
    //OrgTree.showTree("early-warning-setting-unit");
};
//编辑水库三类责任人
var editEarlyWarningContent = function () {
    earlyWarningSelectArray = $('#early-warning-setting-basic-table').bootstrapTable('getSelections');
    $('#early-warning-setting-add-submit').hide();
    $('#early-warning-setting-edit-submit').show();
    if (earlyWarningSelectArray.length == 0) {
        layer.msg("请选择一条记录", {time: 1500});
        return;
    }
    if (earlyWarningSelectArray.length > 1) {
        layer.msg("编辑时只能选择一条记录", {time: 1500});
        return;
    }
    var selectData = earlyWarningSelectArray[0];
    if (selectData) {
        $('#early-warning-setting-name').val(selectData.bcrnm);
        $('#early-warning-setting-mobelphone').val(selectData.mobphone);
        $('#early-warning-setting-phone').val(selectData.landphone);
        $('#early-warning-setting-email').val(selectData.email);
        $('#early-warning-setting-depart').val(selectData.depart);
        //$('#mail-title').val(selectData.title);
        $('#early-warning-setting-job').val(selectData.duties);
        $('.early-warning-setting-container').show();
        earlyWarningSettingLayer = initLayerWin("编辑", ".early-warning-setting-content-input");
    }
}
//更新水库三类责任人数据(type 1:新增,2:编辑)
var updateEarlyWarningData = function (type) {
    var name = $('#early-warning-setting-name').val();
    var mobelphone = $('#early-warning-setting-mobelphone').val();
    var phone = $('#early-warning-setting-phone').val();
    var email = $("#early-warning-setting-email").val();
    var depart = $("#early-warning-setting-depart").val();
    var job = $('#early-warning-setting-job').val();
    if (type == 1) {
        var insertData = [
            {
                bcrnm: name,
                mobphone: mobelphone,
                landphone: phone,
                email: email,
                mocd: currentMocd,
                duties: job,
                orgcd: currentOrgcd,
                depart: depart,
                title: title
            }
        ];
        ajaxCallJson(insertData[0], "/base/save/communication", function (result) {
            if (result) {
                if (result.flag) {
                    layer.msg("新增成功！", {time: 2000});
                    ajaxCallJson({mocd: currentMocd}, '/base/getRsvrPersonLiableData', function (result) {
                        showThreeResponsibleTable(result);
                    })
                }
            }
        })
    }
    if (type == 2) {
        var data = earlyWarningSelectArray[0];
        var orgcd = data.orgcd;
        var index = data.index; //取到索引值
        var updateData = {
            bcrcd: data.bcrcd,
            bcrnm: name,
            mobphone: mobelphone,
            landphone: phone,
            email: email,
            mocd: currentMocd,
            orgcd: currentOrgcd,
            duties: job,
            depart: depart,
            title: title
        };
        ajaxCallJson(updateData, "/base/save/communication", function (result) {
            if (result) {
                if (result.flag) {
                    earlyWarningSelectArray = [];
                    layer.msg("数据更新成功！", {time: 2000});
                    ajaxCallJson({mocd: currentMocd}, '/base/getRsvrPersonLiableData', function (result) {
                        showThreeResponsibleTable(result);
                    })
                }
            }
        })
    }
    layer.close(earlyWarningSettingLayer)
}
//删除水库三类责任人数据
var deleteEarlyWarningContent = function () {
    earlyWarningSelectArray = $('#early-warning-setting-basic-table').bootstrapTable('getSelections');
    if (earlyWarningSelectArray.length == 0) {
        layer.msg("请选择一条记录", {time: 1500});
        return;
    }
    layer.confirm("确定删除吗?", {btn: ["删除", "取消"]}, function () {
        var ncd = [];
        for (var i = 0; i < earlyWarningSelectArray.length; i++) {
            ncd.push(earlyWarningSelectArray[i].bcrcd)
        }
        var params = {
            ncdArray: ncd
        }
        ajaxCallJson(params, "/base/delete/communication", function (result) {
            if (result) {
                if (result.flag) {
                    layer.msg("删除成功！");
                    ajaxCallJson({mocd: currentMocd}, '/base/getRsvrPersonLiableData', function (result) {
                        showThreeResponsibleTable(result);
                    })
                    earlyWarningSelectArray = [];
                } else {
                    layer.msg("服务器删除失败！")
                }
            }

        })
    })
}
//初始化layer弹出层
var initLayerWin=function (title,node,wh,cancel) {
  var winWidth = $("body").width();
  var winHeight = $('body').height();
  var area;
  var height, width = winWidth * 0.4, step = 0.5;
  if(wh){
    width = parseInt(wh[0].replace("px",""));
    height= parseInt(wh[1].replace("px",""));
  }else{
    if(winHeight >= 800){
      height = winHeight*0.5;
    }
    if(height<550){
      height=550;
    }
    if(width<600){
      width=600;
    }
  }
  area = [width + "px", height + "px"];
  var index= layer.open({
    type: 1,
    title:title,
    skin: 'win-class',
    shade:0,
    area: area, //宽高
    zIndex:20000,
    offset:[(winHeight * step - height * step) + "px", (winWidth * step - width * step) + "px"],
    content: $(node), //捕获的元素，注意：最好该指定的元素要存放在body最外层，否则可能被其它的相对元素所影响
    cancel:function () {
      if(typeof cancel =="function")
        cancel();
    }
  });
  $(".layui-layer-content").css("overflow","hidden").css("height","100%");
  return index;
}