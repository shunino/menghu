// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.9/esri/copyright.txt for details.
//>>built
define("require exports ../../../core/tsSupport/declareExtendsHelper ../../../core/tsSupport/decorateHelper ../../../core/tsSupport/assignHelper ../../../core/Accessor ../../../core/Collection ../../../core/Error ../../../core/Handles ../../../core/lang ../../../core/Logger ../../../core/Promise ../../../core/promiseUtils ../../../core/watchUtils ../../../core/accessorSupport/decorators ../../support/arcgisLayerUrl ../../../portal/support/geometryServiceUtils ../../../views/3d/layers/graphics/Graphics3DVerticalScale ../../../views/3d/layers/support/FeatureTileFetcher3D ../../../views/3d/layers/support/FeatureTileFetcher3DDebugger ../../../views/3d/support/debugFlags".split(" "),
function(f,G,n,d,p,q,r,t,u,v,w,x,y,k,c,z,A,B,C,D,E){var F=w.getLogger("esri.layers.graphics.controllers.FeatureTileController3D");f=function(g){function a(b){b=g.call(this)||this;b.type="feature-tile-3d";b.serviceDataExtent=null;b.serviceDataExtentIsAccurate=!1;b.serviceDataCount=e.constants.NO_SERVICE_DATA_COUNT;b.suspended=!1;b.tileFetcher=null;b.handles=new u;b.fetchDataInfoPromise=null;return b}n(a,g);e=a;Object.defineProperty(a.prototype,"extent",{set:function(b){if(b&&!b.spatialReference.equals(this.layerView.view.spatialReference))F.error("#extent\x3d",
"extent needs to be in the same spatial reference as the view");else{var a=this._get("extent");a===b||a&&b&&a.equals(b)||(b=b?b.clone():null,this._set("extent",b))}},enumerable:!0,configurable:!0});Object.defineProperty(a.prototype,"updating",{get:function(){return!!(this.tileFetcher&&this.tileFetcher.updating||this.fetchDataInfoPromise)},enumerable:!0,configurable:!0});Object.defineProperty(a.prototype,"displayLimitExceeded",{get:function(){return!(!this.tileFetcher||!this.tileFetcher.displayLimitExceeded)},
enumerable:!0,configurable:!0});Object.defineProperty(a.prototype,"filteredDataExtent",{get:function(){var b=this.serviceDataExtentIsAccurate?this.serviceDataExtent:null;return this.extent?b?b.clone().intersection(this.extent):this.extent:b},enumerable:!0,configurable:!0});Object.defineProperty(a.prototype,"displayFeatureLimit",{set:function(b){this._set("displayFeatureLimit",b);"snapshot"===this.mode&&this._set("displayFeatureLimit",p({},b,{perTile:b.max}));this.tileFetcher&&(this.tileFetcher.displayFeatureLimit=
b)},enumerable:!0,configurable:!0});Object.defineProperty(a.prototype,"mode",{get:function(){var b=e.constants.NO_SERVICE_DATA_COUNT;return"point"!==this.layerView.layer.geometryType?!b&&50>=this.serviceDataCount?"snapshot":"tiles":this.serviceDataCount!==e.constants.NO_SERVICE_DATA_COUNT&&this.displayFeatureLimit&&this.displayFeatureLimit.min&&this.serviceDataCount<=this.displayFeatureLimit.min?"snapshot":"tiles"},enumerable:!0,configurable:!0});Object.defineProperty(a.prototype,"tileDescriptors",
{get:function(){return"snapshot"===this.mode?new r([{id:"dummy-tile-full-extent"}]):this.layerView.view.featureTiles.tiles},enumerable:!0,configurable:!0});Object.defineProperty(a.prototype,"suspendResumeExtentMode",{get:function(){return"snapshot"===this.mode?"computed":"data"},enumerable:!0,configurable:!0});Object.defineProperty(a.prototype,"test",{get:function(){return{fetchDataInfoPromise:this.fetchDataInfoPromise}},enumerable:!0,configurable:!0});a.prototype.initialize=function(){var b=this,
a=y.resolve().then(function(){return b.verifyCapabilities()}).then(function(){return b.fetchServiceDataInfo()}).then(function(){return b.initializeTileFetcher()});this.addResolvingPromise(a)};a.prototype.verifyCapabilities=function(){var b=this.layerView.layer;if(!b.get("capabilities.operations.supportsQuery"))throw new t("graphicscontroller:query-capability-required","Service requires query capabilities to be used as a feature layer",{layer:b});};a.prototype.destroy=function(){this.cancelFetchServiceDataInfo();
this.tileFetcher&&(this.tileFetcher.destroy(),this.tileFetcher=null);this.handles&&(this.handles.destroy(),this.handles=null)};a.prototype.suspend=function(){this.suspended||(this.suspended=!0,this.tileFetcher&&this.tileFetcher.suspend())};a.prototype.resume=function(){this.suspended&&(this.suspended=!1,this.tileFetcher&&this.tileFetcher.resume())};a.prototype.refresh=function(){var b=this,a=function(){b.tileFetcher&&b.tileFetcher.filtersChanged()};this.fetchServiceDataInfo().then(a,a)};a.prototype.initializeTileFetcher=
function(){var b=this,a=this.layerView.view,c=this.layerView.layer;this.handles.add(k.whenOnce(a.featureTiles,"tilingScheme",function(){b.handles.add(a.featureTiles.addClient());b.tileFetcher=new C.FeatureTileFetcher3D({layer:c,filterExtent:b.filteredDataExtent,tilingScheme:a.featureTiles.tilingScheme,tileDescriptors:b.tileDescriptors,features:b.graphics,displayFeatureLimit:b.displayFeatureLimit,verticalScale:new B({sourceSpatialReference:c.spatialReference,destSpatialReference:a.spatialReference}),
viewingMode:a.viewingMode});b.suspended?b.tileFetcher.suspend():b.tileFetcher.resume();b.handles.add([c.watch("definitionExpression",function(){return b.definitionExpressionChanged()}),c.watch("outFields",function(a,c){return b.attributesChanged(a,c)}),c.on("apply-edits",function(a){return b.tileFetcher.applyEdits(a)}),b.watch("filteredDataExtent",function(a){return b.tileFetcher.filterExtent=a},!0),b.watch("tileDescriptors",function(a){return b.tileFetcher.tileDescriptors=a},!0)],"layer");b.handles.add(k.init(E,
"FEATURE_TILE_FETCH_SHOW_TILES",function(c){c&&b.tileFetcher&&!b.tileFetcher.debugger?(b.tileFetcher.debugger=new D.FeatureTileFetcher3DDebugger(b.tileFetcher,a.featureTiles.tilingScheme.toTileInfo(),a),b.tileFetcher.debugger.update()):!c&&b.tileFetcher&&b.tileFetcher.debugger&&(b.tileFetcher.debugger.destroy(),b.tileFetcher.debugger=null)}))}))};a.prototype.definitionExpressionChanged=function(){this.refresh()};a.prototype.attributesChanged=function(b,a){if(!b||-1===b.indexOf("*"))if(b&&a){for(var c=
new Set,m=0;m<b.length;m++){var d=b[m];c.add(d)}for(b=0;b<a.length;b++)if(d=a[b],!c.has(d)){this.refresh();break}}else this.refresh()};a.prototype.createDataInfoQuery=function(){var b=this.layerView.layer,a=b.createQuery();a.outSpatialReference=this.layerView.view.spatialReference;b.capabilities.query.supportsResultType&&(a.resultType="tile");return a};a.prototype.fullExtentIsAccurate=function(){var b=this.layerView.layer;if(b.definitionExpression)return!1;switch(b.type){case "feature":case "stream":return z.isHostedAgolService(b.url);
case "csv":return!0}};a.prototype.fetchServiceDataExtent=function(){var b=this,a=this.layerView,c=a.layer,d=c.capabilities.query.supportsExtent,g=v.clone(a.fullExtentInLocalViewSpatialReference),f=c.fullExtent,l=this.fullExtentIsAccurate(),k=this.serviceDataCount,h=null;!(d&&k<=e.constants.MAX_FEATURE_COUNT_FOR_EXTENT)||g&&l?g?(this._set("serviceDataExtentIsAccurate",l),this._set("serviceDataExtent",g)):f?h=A.projectGeometry(f,a.view.spatialReference,c.portalItem).then(function(a){b._set("serviceDataExtentIsAccurate",
l);b._set("serviceDataExtent",a)}):(this._set("serviceDataExtentIsAccurate",!1),this._set("serviceDataExtent",null)):(a=this.createDataInfoQuery(),h=c.queryExtent(a,{timeout:e.constants.QUERY_EXTENT_TIMEOUT}).then(function(a){b._set("serviceDataExtentIsAccurate",!0);b._set("serviceDataExtent",a.extent)}));h&&(h=h.catch(function(a){a&&"cancel"===a.dojoType||(b._set("serviceDataExtentIsAccurate",g?l:!1),b._set("serviceDataExtent",g))}));return h};a.prototype.fetchServiceDataInfo=function(){var b=this;
this.cancelFetchServiceDataInfo();var a=this.layerView.layer.queryFeatureCount(this.createDataInfoQuery(),{timeout:e.constants.QUERY_COUNT_TIMEOUT}).then(function(a){b._set("serviceDataCount",a);return a}).catch(function(a){if(a&&"cancel"===a.dojoType)throw a;a=e.constants.NO_SERVICE_DATA_COUNT;b._set("serviceDataCount",a);return a}),c=a.then(function(){return b.fetchServiceDataExtent()}).catch(function(a){a&&"AbortError"===a.name||console.error(a)}).then(function(){c===b.fetchDataInfoPromise&&(b.fetchDataInfoPromise=
null)});c.isFulfilled()||(this.fetchDataInfoPromise=c);return a.catch(function(){})};a.prototype.cancelFetchServiceDataInfo=function(){var a=this.fetchDataInfoPromise;a&&(this.fetchDataInfoPromise=null,a.cancel())};var e;d([c.property({readOnly:!0})],a.prototype,"type",void 0);d([c.property({constructOnly:!0})],a.prototype,"graphics",void 0);d([c.property({constructOnly:!0})],a.prototype,"layerView",void 0);d([c.property()],a.prototype,"extent",null);d([c.property({dependsOn:["tileFetcher.updating",
"fetchDataInfoPromise"]})],a.prototype,"updating",null);d([c.property({dependsOn:["tileFetcher.displayLimitExceeded"]})],a.prototype,"displayLimitExceeded",null);d([c.property({readOnly:!0})],a.prototype,"serviceDataExtent",void 0);d([c.property({readOnly:!0})],a.prototype,"serviceDataExtentIsAccurate",void 0);d([c.property({readOnly:!0})],a.prototype,"serviceDataCount",void 0);d([c.property({readOnly:!0,dependsOn:["extent","serviceDataExtent","serviceDataExtentIsAccurate"]})],a.prototype,"filteredDataExtent",
null);d([c.property()],a.prototype,"displayFeatureLimit",null);d([c.property({readOnly:!0,dependsOn:["serviceDataCount","displayFeatureLimit"]})],a.prototype,"mode",null);d([c.property({readOnly:!0,dependsOn:["mode"]})],a.prototype,"tileDescriptors",null);d([c.property({readOnly:!0,dependsOn:["mode"]})],a.prototype,"suspendResumeExtentMode",null);d([c.property()],a.prototype,"tileFetcher",void 0);d([c.property()],a.prototype,"fetchDataInfoPromise",void 0);return a=e=d([c.subclass("esri.layers.graphics.controllers.FeatureTileController3D")],
a)}(c.declared(q,x));(function(c){(function(a){a.NO_SERVICE_DATA_COUNT=Infinity;a.reset=function(){c.constants.MAX_FEATURE_COUNT_FOR_EXTENT=1E4;c.constants.QUERY_COUNT_TIMEOUT=6E3;c.constants.QUERY_EXTENT_TIMEOUT=1E4}})(c.constants||(c.constants={}))})(f||(f={}));f.constants.reset();return f});