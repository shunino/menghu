// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.9/esri/copyright.txt for details.
//>>built
require({cache:{"esri/views/2d/layers/features/controllers":function(){define(["require","exports","../../../../core/tsSupport/assignHelper","../../../../core/Error","../../../../core/promiseUtils"],function(p,g,m,f,n){Object.defineProperty(g,"__esModule",{value:!0});g.getControllerConfiguration=function(e){var g=e.source;return"stream"===e.type?n.resolve().then(function(){var d;if(d=e.filter){var f={};d.geometry&&(f.geometry=d.geometry.toJSON());d.where&&(f.where=d.where);d=f}else d=null;return{type:"stream",
filter:d,purgeOptions:e.purgeOptions}}):e.capabilities.operations.supportsQuery?g&&"openPorts"in g?n.resolve().then(function(){return{type:"memory",processing:e.processing&&e.processing.toWorker()||null}}):n.resolve({type:"on-demand",gdbVersion:e.gdbVersion,historicMoment:e.historicMoment&&e.historicMoment.getTime(),processing:e.processing&&e.processing.toWorker()||null}):n.reject(new f("graphicscontroller:query-capability-required","Service requires query capabilities to be used as a feature layer",
{layer:e}))};g.createController=function(f,g){return("memory"===f?n.create(function(d){return p(["./controllers/MemoryController"],d)}):"stream"===f?n.create(function(d){return p(["./controllers/StreamController"],d)}):n.create(function(d){return p(["./controllers/OnDemandController"],d)})).then(function(d){return d.default}).then(function(d){return new d(m({},g.serviceAndViewInfo,{tileStore:g.tileStore,remoteClient:g.remoteClient}))})}})},"esri/views/2d/layers/features/tileRenderers":function(){define(["require",
"exports","../../../../core/nextTick","../../../../core/promiseUtils"],function(p,g,m,f){Object.defineProperty(g,"__esModule",{value:!0});g.createOrReuseTileRenderer=function(g,e,q){if(g&&g.supportsRenderer(e))return f.create(function(d){return m(function(){return d(g)})});if(!e)return f.resolve(null);switch(e.type){case "class-breaks":case "simple":case "unique-value":return f.create(function(d){m(function(){return p(["./tileRenderers/SymbolTileRenderer"],d)})}).then(function(d){return d.default}).then(function(d){return new d(q)});
case "heatmap":return f.create(function(d){m(function(){return p(["./tileRenderers/HeatmapTileRenderer"],d)})}).then(function(d){return d.default}).then(function(d){return new d(q)})}return f.resolve(null)}})},"esri/views/2d/layers/support/FeatureLayerProxy":function(){define("require exports ../../../../core/tsSupport/declareExtendsHelper ../../../../core/tsSupport/decorateHelper ../../../../core/tsSupport/assignHelper ../../../../core/Accessor ../../../../core/Promise ../../../../core/promiseUtils ../../../../core/requireUtils ../../../../core/workers ../../../../core/accessorSupport/decorators ./util module".split(" "),
function(p,g,m,f,n,e,q,d,t,u,k,r,l){Object.defineProperty(g,"__esModule",{value:!0});n=function(g){function h(b){b=g.call(this,b)||this;b.tileRenderer=null;return b}m(h,g);h.prototype.initialize=function(){var b=this;this.addResolvingPromise(u.open(t.getAbsMid("../features/Pipeline",p,l),{client:this.client,strategy:"dedicated"}).then(function(d){b._connection=d;return b._getStartupOptions(b.layer,b.tileInfo)}).then(function(d){return Array.isArray(d.service.source)?b._connection.invoke("startup",
d,d.service.source):b._connection.invoke("startup",d)}))};h.prototype.destroy=function(){var b=this;this._connection&&this._connection.invoke("destroy").then(function(){return b._connection.close()})};h.prototype.configure=function(b){return this._connection.invoke("configure",b)};h.prototype.refresh=function(){return this._connection.invoke("controller.refresh")};h.prototype.redraw=function(){return this._connection.invoke("controller.redraw")};h.prototype.setViewState=function(b){return this._connection.invoke("setViewState",
b.toJSON())};h.prototype.queryFeatures=function(b){return this._connection.invoke("controller.queryFeatures",b.toJSON())};h.prototype.queryObjectIds=function(b){return this._connection.invoke("controller.queryObjectIds",b.toJSON())};h.prototype.queryFeatureCount=function(b){return this._connection.invoke("controller.queryFeatureCount",b.toJSON())};h.prototype.queryExtent=function(b){return this._connection.invoke("controller.queryExtent",b.toJSON())};h.prototype.queryLatestObservations=function(b){return this._connection.invoke("controller.queryLatestObservations",
b.toJSON())};h.prototype.onEdits=function(b){return this._connection.invoke("controller.onEdits",{addedFeatures:b.addedFeatures,deletedFeatures:b.deletedFeatures,updatedFeatures:b.updatedFeatures})};h.prototype.enableEvent=function(b,d){return this._connection.invoke("controller.enableEvent",{name:b,value:d})};h.prototype._getStartupOptions=function(b,f){var g=b.capabilities,h=b.objectIdField,e=b.source,n=b.fields.map(function(b){return b.toJSON()}),m=b.fullExtent&&b.fullExtent.toJSON(),p=r.toJSONGeometryType(b.geometryType);
if(e&&"openPorts"in e)return e.openPorts().then(function(b){return{service:{capabilities:g,fields:n,fullExtent:m,geometryType:p,objectIdField:h,source:b},tileInfo:f.toJSON()}});if("stream"===b.type){var e=b.source,k=e.relatedLayerDefinition,l=e.archivedLayerDefinition,k=k&&{capabilities:k.capabilities,fields:k.fields,fullExtent:k.extent,geometryType:k.geometryType,objectIdField:k.objectIdField,source:e.layerDefinition.relatedFeatures.featuresUrl,joinField:e.layerDefinition.relatedFeatures.joinField}||
null,l=l&&{capabilities:l.capabilities,fields:l.fields,fullExtent:l.extent,geometryType:l.geometryType,objectIdField:l.objectIdField,source:e.layerDefinition.keepLatestArchive.featuresUrl,maximumFeatureAge:e.layerDefinition.keepLatestArchive.maximumFeatureAge,updateInterval:e.layerDefinition.keepLatestArchive.updateInterval}||null;return d.resolve({service:{capabilities:b.capabilities,fields:b.fields.map(function(b){return b.toJSON()}),fullExtent:b.fullExtent&&b.fullExtent.toJSON()||null,geometryType:r.toJSONGeometryType(b.geometryType),
objectIdField:b.objectIdField||"__OBJECTID",source:b.parsedUrl.path,buddyLayers:{relatedFeatures:k,keepLatestArchive:l},streamUrls:e.layerDefinition.streamUrls,timeInfo:e.layerDefinition.timeInfo,content:b.parsedUrl.query},tileInfo:f.toJSON()})}return d.resolve({service:{capabilities:g,fields:n,fullExtent:m,geometryType:p,objectIdField:h,source:b.dynamicDataSource?b.parsedUrl:b.url+"/"+b.layerId},tileInfo:f.toJSON()})};f([k.property({constructOnly:!0})],h.prototype,"client",void 0);f([k.property({constructOnly:!0})],
h.prototype,"layer",void 0);f([k.property({constructOnly:!0})],h.prototype,"tileInfo",void 0);f([k.property()],h.prototype,"tileRenderer",void 0);return h=f([k.subclass()],h)}(k.declared(e,q));g.default=n})},"esri/views/2d/layers/support/util":function(){define(["require","exports","../../../../core/kebabDictionary"],function(p,g,m){Object.defineProperty(g,"__esModule",{value:!0});var f=m({esriGeometryPoint:"point",esriGeometryMultipoint:"multipoint",esriGeometryPolyline:"polyline",esriGeometryPolygon:"polygon",
esriGeometryMultiPatch:"multipatch"});g.toJSONGeometryType=function(g){return f.toJSON(g)}})},"*noref":1}});
define("require exports ../../../core/tsSupport/declareExtendsHelper ../../../core/tsSupport/decorateHelper ../../../core/tsSupport/paramHelper ../../../core/tsSupport/assignHelper ../../../geometry ../../../Graphic ../../../core/Collection ../../../core/Error ../../../core/promiseUtils ../../../core/watchUtils ../../../core/accessorSupport/decorators ../../../core/accessorSupport/ensureType ../../../layers/support/TileInfo ../../../tasks/support/FeatureSet ../../../tasks/support/Query ../engine/DOMContainer ../engine/webgl/definitions ./LayerView2D ./features/controllers ./features/tileRenderers ./support/FeatureLayerProxy ../tiling/TileInfoView ../tiling/TileStrategy ../../layers/RefreshableLayerView ../../support/screenshotUtils".split(" "),function(p,
g,m,f,n,e,q,d,t,u,k,r,l,w,h,b,v,x,y,z,B,C,D,E,F,A,G){function H(b){return b&&b.highlight}var I=w.ensureType(v);return function(e){function c(){var a=null!==e&&e.apply(this,arguments)||this;a._pipelineIsUpdating=!1;a.container=new x;return a}m(c,e);c.prototype.destroy=function(){this._proxy.destroy()};c.prototype.initialize=function(){var a=this,b=this._tileInfo=h.create({spatialReference:this.view.spatialReference,size:y.TILE_SIZE});this._tileInfoView=new E(b);this._tileStrategy=new F({cachePolicy:"purge",
acquireTile:function(b){return a._acquireTile(b)},releaseTile:function(b){return a._releaseTile(b)},tileInfoView:this._tileInfoView,buffer:0});this._proxy=this._createProxy(b);this.addResolvingPromise(k.all([B.getControllerConfiguration(this.layer),this._proxy.when()]).then(function(a){return a[1].configure({controller:a[0]})}))};Object.defineProperty(c.prototype,"labelsVisible",{get:function(){return!this.suspended&&this.layer.labelingInfo&&this.layer.labelsVisible},enumerable:!0,configurable:!0});
Object.defineProperty(c.prototype,"numFeatures",{get:function(){var a=0;this.attached?this._tileStrategy.tiles.forEach(function(b){a+=b.iconDisplayRecords?b.iconDisplayRecords.length:0}):0;return a},enumerable:!0,configurable:!0});Object.defineProperty(c.prototype,"renderingConfigHash",{get:function(){if(!this.layer)return null;var a=this.layer,b=a.renderer,d=a.labelingInfo;return JSON.stringify({definitionExpression:a.definitionExpression,historicMoment:a.historicMoment,outFields:a.outFields.slice().sort(),
renderer:b,labelingInfo:d})},enumerable:!0,configurable:!0});c.prototype.highlight=function(a,b){var e=this,c;a instanceof d?c=[a.getAttribute(this.layer.objectIdField||"__OBJECTID")]:"number"===typeof a?c=[a]:t.isCollection(a)?c=a.map(function(a){return a&&a.getAttribute(e.layer.objectIdField)}).toArray():Array.isArray(a)&&0<a.length&&(c="number"===typeof a[0]?a:a.map(function(a){return a&&a.getAttribute(e.layer.objectIdField)}));return(c=c.filter(function(a){return null!=a}))&&c.length&&H(this.tileRenderer)?
this.tileRenderer.highlight(c):{remove:function(){}}};c.prototype.hitTest=function(a,b){var c=this;return this.suspended||!this.tileRenderer?k.resolve(null):this.tileRenderer.hitTest(a,b).then(function(a){return 0===a.length?null:c._proxy.queryFeatures(new v({objectIds:a,outSpatialReference:c.view.spatialReference,returnGeometry:!0})).then(function(a){if(!a.features[0])return null;a=d.fromJSON(a.features[0]);a.layer=c.layer;a.sourceLayer=c.layer;a.geometry&&(a.geometry.spatialReference=c.view.spatialReference);
return a})})};c.prototype.queryFeatures=function(a){var c=this;return this.queryFeaturesJSON(a).then(function(a){a=b.fromJSON(a);a.features.forEach(function(a){a.layer=c.layer;a.sourceLayer=c.layer});return a})};c.prototype.queryFeaturesJSON=function(a){return this._proxy.queryFeatures(this._cleanUpQuery(a))};c.prototype.queryObjectIds=function(a){return this._proxy.queryObjectIds(this._cleanUpQuery(a))};c.prototype.queryFeatureCount=function(a){return this._proxy.queryFeatureCount(this._cleanUpQuery(a))};
c.prototype.queryExtent=function(a){return this._proxy.queryExtent(this._cleanUpQuery(a)).then(function(a){return{count:a.count,extent:q.Extent.fromJSON(a.extent)}})};c.prototype.takeScreenshot=function(a){a=G.toRenderSettings(a,this.view);return this.tileRenderer.featuresView._stage.takeScreenshot(a)};c.prototype.update=function(a){this.attached&&this._tileStrategy&&this.tileRenderer&&(this._tileStrategy.update(a)||this.requestUpdate(),this._proxy.setViewState(a.state),this.notifyChange("numFeatures"),
this.notifyChange("updating"))};c.prototype.attach=function(){var a=this;this.handles.add([r.init(this,"layer.processing.version",function(b){a._proxy.redraw()}),this.layer.on("edits",function(b){a._proxy.onEdits(b)}),r.init(this,"renderingConfigHash",function(){var b=a._tileRendererPromise=C.createOrReuseTileRenderer(a.tileRenderer,a.layer.renderer,{layerView:a,tileInfoView:a._tileInfoView,layer:a.layer,highlightOptions:a.view.highlightOptions}).then(function(c){a._tileRendererPromise===b&&(a._tileRendererPromise=
null,a.tileRenderer!==c&&(a._tileStrategy.clear(),a.tileRenderer&&(a.tileRenderer.uninstall(a.container),a.tileRenderer.destroy()),(a.tileRenderer=a._proxy.client.tileRenderer=c)&&c.install(a.container),a.requestUpdate()),c&&(c=c.getProcessorConfiguration(),a.tileRenderer.wouldClear(c)?(a.tileRenderer.clear(),a.tileRenderer.applyConfiguration(c),a._proxy.configure({processor:c})):a.tileRenderer.needsProcessorReconfiguration(c)?a._proxy.configure({processor:c}):a.tileRenderer.applyConfiguration(c),
a.requestUpdate()))},function(){return a._tileRendererPromise=null})}),this.view.watch("highlightOptions.color,highlightOptions.fillOpacity,highlightOptions.haloOpacity",function(){a.container.requestRender()})])};c.prototype.detach=function(){this.container.removeAllChildren();this.handles.remove(this);this._tileRendererPromise=null;this._pipelineIsUpdating=!1;this.tileRenderer&&(this.tileRenderer.uninstall(this.container),this.tileRenderer=null);this._tileStrategy&&(this._tileStrategy.destroy(),
this._tileStrategy=null)};c.prototype.moveStart=function(){this.requestUpdate()};c.prototype.viewChange=function(){this.requestUpdate()};c.prototype.moveEnd=function(){this.requestUpdate()};c.prototype.doRefresh=function(){this._proxy.refresh()};c.prototype.isUpdating=function(){return null!=this.layer.renderer&&(null==this.tileRenderer||this._pipelineIsUpdating||this.tileRenderer.updating)};c.prototype._createClientOptions=function(){var a=this;return{executeProcessing:function(b){var c=a.layer.processing;
return c?(b=c.process(b.featureSet,c.options))?b:k.reject(new u("FeatureLayer","invalid processing.process() method, returns nothing")):b.featureSet},setUpdating:function(b){a._pipelineIsUpdating=b;a.notifyChange("updating")}}};c.prototype._cleanUpQuery=function(a){a=a?I(a):new v;a.outSpatialReference||(a.outSpatialReference=this.view.spatialReference);return a};c.prototype._createProxy=function(a){return new D.default({layer:this.layer,tileInfo:a,client:this._createClientOptions()})};c.prototype._acquireTile=
function(a){var b=this;a=this.tileRenderer.acquireTile(a);a.once("attach",function(){b.requestUpdate()});return a};c.prototype._releaseTile=function(a){this.tileRenderer.releaseTile(a)};f([l.property()],c.prototype,"_pipelineIsUpdating",void 0);f([l.property({dependsOn:["suspended","layer.labelingInfo","layer.labelsVisible"]})],c.prototype,"labelsVisible",null);f([l.property()],c.prototype,"numFeatures",null);f([l.property({dependsOn:["layer.renderer","layer.outFields","layer.definitionExpression",
"layer.historicMoment","layer.labelingInfo"]})],c.prototype,"renderingConfigHash",null);f([l.property()],c.prototype,"tileRenderer",void 0);f([l.property({dependsOn:["layer.renderer","tileRenderer.updating"]})],c.prototype,"updating",void 0);return c=f([l.subclass("esri.views.2d.layers.FeatureLayerView2D")],c)}(l.declared(z,A))});