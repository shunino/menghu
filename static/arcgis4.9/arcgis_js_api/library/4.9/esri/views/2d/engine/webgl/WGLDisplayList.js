// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.9/esri/copyright.txt for details.
//>>built
define("require exports ../../../../core/tsSupport/generatorHelper ../../../../core/Logger ./enums ./MaterialInfo ./Utils ./util/serializationUtils".split(" "),function(t,A,w,x,g,p,y,h){function n(b,a,c){for(var e=[],d=3;d<arguments.length;d++)e[d-3]=arguments[d];a<b.length?b.splice.apply(b,[a,c].concat(e)):b.push.apply(b,e)}var z=x.getLogger("esri.views.2d.engine.webgl.WGLDisplayList");t=function(){function b(){this.symbolLevels=[]}Object.defineProperty(b.prototype,"empty",{get:function(){return!this.symbolLevels||
0===this.symbolLevels.length},enumerable:!0,configurable:!0});b.prototype.addToList=function(a,c){if(Array.isArray(a))for(var e=0;e<a.length;e++)this._addToList(a[e],c);else this._addToList(a,c)};b.prototype.removeFromList=function(a){Array.isArray(a)||(a=[a]);for(var c=null,e=0;e<a.length;e++)c=this._removeFromList(a[e]);return c};b.prototype.ofType=function(a){var c,e,d,b,f,k,q,g,h,m,n;return w(this,function(l){switch(l.label){case 0:c=0,e=this.symbolLevels,l.label=1;case 1:if(!(c<e.length))return[3,
8];d=e[c];b=0;f=d.zLevels;l.label=2;case 2:if(!(b<f.length))return[3,7];k=f[b];q=k.geometryDPInfo;g=this._getDPInfoType(a);if(!q[g])return[3,6];h=0;m=q[g];l.label=3;case 3:if(!(h<m.length))return[3,6];n=m[h];return[4,n];case 4:l.sent(),l.label=5;case 5:return h++,[3,3];case 6:return b++,[3,2];case 7:return c++,[3,1];case 8:return[2]}})};b.prototype.clone=function(){for(var a=new b,c=0,e=this.symbolLevels;c<e.length;c++)a.symbolLevels.push(e[c].clone());return a};b.prototype._addToList=function(a,
c){var b=this._getDisplayList(a.symbolLevel,a.zOrder,a.geometryType);c=null!=c?c:b.length-1;var d=0<=c&&c<b.length?b[c]:null;null!==d&&y.isSameMaterialInfo(d.materialInfo,a.materialInfo)&&d.indexFrom+d.indexCount===a.indexFrom?d.indexCount+=a.indexCount:(d=new m,d.indexFrom=a.indexFrom,d.indexCount=a.indexCount,d.materialInfo=a.materialInfo,d.geometryType=a.geometryType,n(b,c+1,0,d))};b.prototype._removeFromList=function(a){for(var c=this._getDisplayList(a.symbolLevel,a.zOrder,a.geometryType),b=c.length,
d=void 0,l=0;l<b;++l){var f=c[l];a.indexFrom+a.indexCount>f.indexFrom&&a.indexFrom<f.indexFrom+f.indexCount&&(d=l)}if(void 0!==d){f=c[d];if(a.indexFrom===f.indexFrom)return f.indexCount-=a.indexCount,f.indexFrom+=a.indexCount,0===f.indexCount&&n(c,d,1),d-1;if(a.indexFrom+a.indexCount===f.indexFrom+f.indexCount)return f.indexCount-=a.indexCount,0===f.indexCount?(n(c,d,1),d-1):d;var b=f.indexFrom,l=a.indexFrom-f.indexFrom,k=a.indexCount;a=f.indexFrom+f.indexCount-(a.indexFrom+a.indexCount);f.indexCount=
l;var g=new m;g.geometryType=f.geometryType;g.materialInfo=new p.default;g.materialInfo.copy(f.materialInfo);g.indexFrom=b+l+k;g.indexCount=a;n(c,d+1,0,g);return d}return null};b.prototype._getDisplayList=function(a,c,b){for(var d,e=this.symbolLevels.length,f=0;f<e;f++)if(this.symbolLevels[f].symbolLevel===a){d=this.symbolLevels[f];break}d||(d=new u,d.symbolLevel=a,this.symbolLevels.push(d));var k;a=d.zLevels.length;for(e=0;e<a;e++)if(d.zLevels[e].zLevel===c){k=d.zLevels[e];break}k||(k=new v,k.geometryDPInfo=
new r,k.zLevel=c,d.zLevels.push(k));var h;switch(b){case g.WGLGeometryType.FILL:k.geometryDPInfo.fill||(k.geometryDPInfo.fill=[]);h=k.geometryDPInfo.fill;break;case g.WGLGeometryType.LINE:k.geometryDPInfo.line||(k.geometryDPInfo.line=[]);h=k.geometryDPInfo.line;break;case g.WGLGeometryType.MARKER:k.geometryDPInfo.marker||(k.geometryDPInfo.marker=[]);h=k.geometryDPInfo.marker;break;case g.WGLGeometryType.TEXT:k.geometryDPInfo.text||(k.geometryDPInfo.text=[]);h=k.geometryDPInfo.text;break;case g.WGLGeometryType.LABEL:k.geometryDPInfo.label||
(k.geometryDPInfo.label=[]);h=k.geometryDPInfo.label;break;default:console.error("Trying to add a record with geometry type '"+b+"'.")}return h};b.prototype.serialize=function(a){h.serializeList(a,this.symbolLevels);return a};b.deserialize=function(a){var c=new b;c.symbolLevels=h.deserializeList(a,u);return c};b.prototype._getDPInfoType=function(a){switch(a){case g.WGLGeometryType.FILL:return"fill";case g.WGLGeometryType.LINE:return"line";case g.WGLGeometryType.MARKER:return"marker";case g.WGLGeometryType.TEXT:return"text";
case g.WGLGeometryType.LABEL:return"label";default:z.error("DisplayList: Tried to convert unknown geometryType: "+a)}};return b}();var m=function(){function b(){this.materialInfo=null;this.indexCount=this.indexFrom=0}b.prototype.clone=function(){var a=new b;a.geometryType=this.geometryType;a.materialInfo=new p.default;a.materialInfo.copy(this.materialInfo);a.indexFrom=this.indexFrom;a.indexCount=this.indexCount;return a};b.prototype.serialize=function(a){this.materialInfo.serialize(a);a.push(this.indexFrom);
a.push(this.indexCount);return a};b.deserialize=function(a,c){var e=new b;e.geometryType=c.geometryType;e.materialInfo=p.default.deserialize(a);e.indexFrom=a.readInt32();e.indexCount=a.readInt32();return e};return b}(),r=function(){function b(){this.label=this.text=this.marker=this.line=this.fill=null}b.prototype.clone=function(){var a=new b;a.fill=this.fill&&this.fill.map(function(a){return a.clone()});a.line=this.line&&this.line.map(function(a){return a.clone()});a.marker=this.marker&&this.marker.map(function(a){return a.clone()});
a.text=this.text&&this.text.map(function(a){return a.clone()});a.label=this.label&&this.label.map(function(a){return a.clone()});return a};b.prototype.serialize=function(a){h.serializeList(a,this.fill);h.serializeList(a,this.line);h.serializeList(a,this.marker);h.serializeList(a,this.text);h.serializeList(a,this.label);return a};b.deserialize=function(a){var c=new b,e={geometryType:g.WGLGeometryType.FILL},d=h.deserializeList(a,m,e);d.length&&(c.fill=d);e.geometryType=g.WGLGeometryType.LINE;d=h.deserializeList(a,
m,e);d.length&&(c.line=d);e.geometryType=g.WGLGeometryType.MARKER;d=h.deserializeList(a,m,e);d.length&&(c.marker=d);e.geometryType=g.WGLGeometryType.TEXT;d=h.deserializeList(a,m,e);d.length&&(c.text=d);e.geometryType=g.WGLGeometryType.LABEL;a=h.deserializeList(a,m,e);a.length&&(c.label=a);return c};return b}(),v=function(){function b(){this.geometryDPInfo=new r}b.prototype.clone=function(){var a=new b;a.zLevel=this.zLevel;a.geometryDPInfo=this.geometryDPInfo.clone();return a};b.prototype.serialize=
function(a){a.push(this.zLevel);this.geometryDPInfo.serialize(a);return a};b.deserialize=function(a){var c=new b;c.zLevel=a.readInt32();c.geometryDPInfo=r.deserialize(a);return c};return b}(),u=function(){function b(){this.zLevels=[]}b.prototype.clone=function(){var a=new b;a.symbolLevel=this.symbolLevel;for(var c=0,e=this.zLevels;c<e.length;c++)a.zLevels.push(e[c].clone());return a};b.prototype.serialize=function(a){a.push(this.symbolLevel);h.serializeList(a,this.zLevels);return a};b.deserialize=
function(a){var c=new b;c.symbolLevel=a.readInt32();c.zLevels=h.deserializeList(a,v);return c};return b}();return t});